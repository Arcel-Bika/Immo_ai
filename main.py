"""
Immo AI - Application Streamlit pour pr√©dire le prix des maisons

Cette application permet √† l'utilisateur de saisir des caract√©ristiques d'une maison, telles que
la taille de la parcelle, le nombre de chambres et de salons, ainsi que la commune et le quartier,
pour obtenir une estimation du prix via un mod√®le d'intelligence artificielle (IA).

Le mod√®le d'IA est entra√Æn√© √† partir des donn√©es pr√©c√©demment fournies, encod√©es et trait√©es avec
des algorithmes de machine learning.

Modules
-------
    - streamlit : pour cr√©er l'interface utilisateur
    - pandas : pour g√©rer les donn√©es sous forme de DataFrame
    - func : un module externe qui contient les fonctions `data_encoder` et `output_data`
             ainsi qu'un mod√®le de r√©gression lin√©aire (`reg_model`).

Fonctions
---------
    - st.title : Affiche le titre de l'application.
    - st.text : Affiche une br√®ve description de l'application.
    - st.text_input : Permet √† l'utilisateur de saisir des informations sur les caract√©ristiques de la maison.
    - st.error : Affiche un message d'erreur si les donn√©es saisies ne sont pas valides.
    - st.write : Affiche le r√©sultat de la pr√©diction du mod√®le.

Donn√©es saisies par l'utilisateur
---------------------------------
    - Commune : La commune o√π se trouve la maison.
    - Quartier : Le quartier o√π se trouve la maison.
    - Taille de la parcelle : Taille du terrain de la maison (doit √™tre un nombre entier).
    - Nombre de salons : Le nombre de salons dans la maison (doit √™tre un nombre entier).
    - Nombre de chambres : Le nombre de chambres dans la maison (doit √™tre un nombre entier).

Le mod√®le pr√©dira ensuite le prix estim√© en fonction de ces caract√©ristiques.
"""

from api import func
import streamlit as st
import pandas as pd

# Titre
st.title("Immo :blue[AI] ü§ñ‚Äã")
st.text("Recherchez, trouvez selon votre budget")

# Initialiser les variables si elles n'existent pas encore dans st.session_state
if 'visibility' not in st.session_state:
    st.session_state.visibility = "visible"
if 'disabled' not in st.session_state:
    st.session_state.disabled = False
if 'placeholder' not in st.session_state:
    st.session_state.placeholder = "Entrez une valeur"

# Cr√©ation des colonnes
col1, col2 = st.columns(2)

# Donn√©es √† rechercher
with col1:
    commune = st.text_input(
        "Entrez la commune",
        label_visibility=st.session_state.visibility,
        disabled=st.session_state.disabled,
        placeholder=st.session_state.placeholder,
    )
    quartier = st.text_input(
        "Entrez le quartier",
        label_visibility=st.session_state.visibility,
        disabled=st.session_state.disabled,
        placeholder=st.session_state.placeholder,
    )
    taille_parcelle = st.text_input(
        "Entrez la taille de la parcelle",
        label_visibility=st.session_state.visibility,
        disabled=st.session_state.disabled,
        placeholder=st.session_state.placeholder,
    )

with col2:
    nb_salon = st.text_input(
        "Entrez le nombre de salons",
        disabled=st.session_state.disabled,
        placeholder=st.session_state.placeholder,
    )
    nb_chambres = st.text_input(
        "Entrez le nombre de chambres",
        disabled=st.session_state.disabled,
        placeholder=st.session_state.placeholder,
    )

# V√©rification des donn√©es
if taille_parcelle.isdigit() and nb_salon.isdigit() and nb_chambres.isdigit():
    taille_parcelle = int(taille_parcelle)
    nb_salon = int(nb_salon)
    nb_chambres = int(nb_chambres)
else:
    st.error("Veuillez entrer des nombres valides pour les salons, les chambres et la taille de la parcelle.")

# Exemple des donn√©es entr√©es par l'utilisateur
user_data = {
    'nb_chambres': [nb_chambres],
    'nb_salon': [nb_salon],
    'taille_parcelle': [taille_parcelle],
    'commune': [commune],
    'quartier': [quartier]
}

user_df = pd.DataFrame(user_data)

# Encodage des donn√©es
user_df_encoded = func.data_encoder(user_df)

# V√©rification de l'existence du mod√®le
if hasattr(func, 'reg_model'):
    # Pr√©diction du prix de la maison
    predicted_price = func.output_data(func.reg_model, user_df_encoded)
    st.write(f"Le prix estim√© pour la maison est : {predicted_price[0]} $")
else:
    st.error("Le mod√®le de r√©gression n'est pas disponible.")
